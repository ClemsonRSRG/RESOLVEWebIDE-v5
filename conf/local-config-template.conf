# This file is a template for setting up the app on your local system
# make a cope of this called local-config.conf and edit these settings
# for your local system. The file is ignored by git so there won't be any
# with other users

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
#play.crypto.secret=

# this is the port the app should run on
#http.port=9000
#jpda.port=8081

# Use this if you don't host your Play application at the root of the domain
# you're serving it from. This parameter has no effect when deployed as a
# war, because the path will be handled by the application server.
#http.path=/

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS
#
# Add the name of the persistence unit
# jpa.default=

# Play Mailer
#play.mailer {
  #host= (mandatory)
  #port= (defaults to 25)
  #ssl= (defaults to no)
  #tls= (defaults to no)
  #user= (optional)
  #password= (optional)
  #debug= (defaults to no, to take effect you also need to set the log level to "DEBUG" for the application logger)
  #timeout= (defaults to 60s in milliseconds)
  #connectiontimeout= (defaults to 60s in milliseconds)
  #mock= (defaults to no, will only log all the email properties instead of sending an email)
#}

# SecureSocial 3
#securesocial {
  #
  # If enabled, sets the Favicon to display when in SecureSocial pages
  #
  #faviconPath="your path"

  #
  # Where to redirect the user if SecureSocial can't figure that out from
  # the request that was received before authenticating the user
  #
  #onLoginGoTo=/

  #
  # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
  #
  #onLogoutGoTo=/login

  #
  # Where to redirect the user when he/she starts the signup process.
  # If not set SecureSocial will redirect to the login page
  #
  #onStartSignUpGoTo=/login

  #
  # Where to redirect the user when he/she signs up.
  # If not set SecureSocial will redirect to the login page
  #
  #onSignUpGoTo=/login

  #
  # Where to redirect the user when he starts the password reset process.
  # If not set SecureSocial will redirect to the login page
  #
  #onStartResetPasswordGoTo=/login

  #
  # Where to redirect the user when he resets his/her password.
  # If not set SecureSocial will redirect to the login page
  #
  #onResetPasswordGoTo=/login

  #
  # Where to redirect the user when he changes his/her password.
  # If not set SecureSocial will redirect to the password change page
  #
  #onPasswordChangeGoTo=/password

  #
  # Enable SSL
  #
  #ssl=false

  #
  # The controller class for assets. This is optional, only required
  # when you use a custom class for Assets.
  #
  #assetsController=controllers.ReverseMyCustomAssetsController

  #cookie {
    #name=id
    #path=/
    #domain=some_domain
    #httpOnly=true
    #idleTimeoutInMinutes=30
    #absoluteTimeoutInMinutes=720
  #}

  #
  # Username Password Provider (Details in the Link Below)
  # Link: http://securesocial.ws/guide/configuration.html
  #
  #userpass {
    #withUserNameSupport=false
    #sendWelcomeEmail=true
    #enableGravatarSupport=true
    #signupSkipLogin=true
    #tokenDuration=60
    #tokenDeleteInterval=5
    #minimumPasswordLength=8
    #enableTokenJob=true
    #hasher=bcrypt
  #}
#}

# Working Directory Path
# Windows: this\\is\\my\\path
# Linux: this/is/my/path
#workingdir=pathtoworkingdirectory

# Version (Research/Interface)
# version=research